use:
  container: container
  audio: audio
  video: video

# Default action is "fail".
# Default args is "[rightval]".
flows:
# --- [Container] -------------
  container:
  # Expect streams >= 1
  - left: streams
    operator: ">="
    right: 1
    message: encode.container.streams
  # Expect duration <= 90
  - left: duration
    operator: "<="
    right: 90
    message: encode.container.duration
# --- [Audio] -----------------
  audio:
  # Expect duration <= 90
  - left: duration
    operator: "<="
    right: 90
    message: encode.audio.duration
  # Expect channels <= 2
  - left: channels
    operator: "<="
    right: 2
    message: encode.audio.channel
# --- [Video] -----------------
  video:
  # Expect duration <= 90
  - left: duration
    operator: "<="
    right: 90
    message: encode.video.duration
  # Expect height >= 180
  - left: height
    operator: ">="
    right: 180
    message: encode.video.height
  # Expect width >= 180
  - left: width
    operator: ">="
    right: 180
    message: encode.video.width
  # Expect progressive
  - left: fieldOrder
    operator: "=="
    right: progressive
    message: encode.video.interlace
  # Expect SDR
  - left: colorTransfer
    operator: excludes
    right: [smpte2084, arib-std-b67]
    message: encode.video.hdr
